{"version":3,"sources":["helpers.js","components/coins.js","components/input.js","algorithm.js","barchart.js","App.js","serviceWorker.js","index.js"],"names":["SVG_WIDTH_MARGIN","Math","max","window","innerWidth","SVG_HEIGHT_MARGIN","innerHeight","getRandomInt","min","ceil","floor","random","getCoinRadius","faceValue","Coin","props","radius","darkColor","color","diff","red","parseInt","slice","green","blue","toString","getDarkerColor","circleStyle","fill","cx","cy","r","stroke","strokeWidth","textStyle","textAnchor","fontFamily","fontWeight","fontSize","fontStyle","lineHeight","letterSpacing","className","style","x","y","dy","d","opacity","InputField","id","value","onChange","type","placeholder","step","disabled","SliderField","minValue","maxValue","formatLabel","format","DoubleSliderField","Button","onClick","text","Toggle","checked","chekced","htmlFor","data-checked","checkedText","data-unchecked","uncheckedText","CheckBox","getCoinNums","coinSizes","allCoinNums","coinNums","forEach","coin","active","updateCoinNums","change","coins","getMaxCoinNum","maxNum","getMinCoins","changeSum","prioritization","getAmountCoeff","minNum","getMinCoinNum","coinAmount","getAmountsArray","entry","minCoins","amounts","Array","elem","index","array","Object","assign","getChange","amountsArray","amountCoeff","amount","length","foundChange","console","log","clearSVG","d3","selectAll","remove","coinNumsCollection","yAxis","bars","labels","header","a","svg","append","cycles","transition","data","join","enter","attr","margin","left","barSize","n","top","update","exit","call","label","xScale","yScale","bandwidth","bar","g","axis","ticks","height","tickSizeOuter","tickSizeInner","_","select","right","bottom","domain","rangeRound","padding","range","xAxis","tickFormat","updateHeader","updateBars","updateAxis","updateLabels","prevNums","duration","ease","end","COIN_SIZES","COINS_NUMS","1","2","5","10","25","50","App","width","useState","menu","setMenu","coinNumbers","setCoinNumbers","coinCoords","setCoinCoords","simulation","setSimulation","changeRange","setChangeRange","changeValue","setChangeValue","loading","setLoading","setCycles","JSON","parse","stringify","coinNumbersSim","setCoinNumbsersSim","setPrioritization","toggleMenu","event","handleCoinNumbersChange","target","Number","state","handleCoinActiveChange","runSimulation","counter","activeCoins","push","getActiveCoins","count","drawCoinNumbers","useEffect","Fragment","preventDefault","setTimeout","coords","windowWidth","windowHeight","r1","x1","y1","r2","x2","y2","coordsArray","newCoords","collide","otherCoords","generateCoinCoords","getCoinsArray","newRange","map","key","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.496a0183.chunk.js","sourcesContent":["const SVG_WIDTH_MARGIN = Math.max(80, (window.innerWidth - 350) / 2);\nconst SVG_HEIGHT_MARGIN = Math.max(80, (window.innerHeight - 350) / 2);\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getDarkerColor(color, diff) {\n  const red = parseInt(color.slice(1, 3), 16) - diff;\n  const green = parseInt(color.slice(3, 5), 16) - diff;\n  const blue = parseInt(color.slice(5, 7), 16) - diff;\n  return `#${red.toString(16)}${green.toString(16)}${blue.toString(16)}`\n}\n\nexport function getCoinRadius(faceValue) {\n  const baseRadius = 50;\n   return baseRadius + (faceValue - baseRadius) / 3.5;\n}\n\nexport function checkCollision(r1, x1, y1, r2, x2, y2) {\n  return (x2 - x1) ** 2 + (y2 - y1) ** 2 < (r1 + r2) ** 2;\n}\n\n// TODO: make coords more structured\nexport function generateCoinCoords(coins, windowWidth, windowHeight) {\n  let coordsArray = [];\n  let newCoords = {};\n  for (let coin of coins) {\n    let collide = true;\n    while (collide) {\n      newCoords = {\n        value: coin,\n        x: getRandomInt(SVG_WIDTH_MARGIN, windowWidth - SVG_WIDTH_MARGIN),\n        y: getRandomInt(SVG_HEIGHT_MARGIN, windowHeight - SVG_HEIGHT_MARGIN)\n      };\n      collide = false;\n      for (let otherCoords of coordsArray) {\n        if (otherCoords.value && checkCollision(\n          getCoinRadius(newCoords.value),\n          newCoords.x,\n          newCoords.y,\n          getCoinRadius(otherCoords.value),\n          otherCoords.x,\n          otherCoords.y,\n        )) {\n          collide = true;\n        }\n      }\n      if (!collide) {\n        coordsArray.push(newCoords);\n      }\n    }\n  }\n  return coordsArray;\n}\n\nexport function getCoinsArray(change, coins) {\n  const array = [];\n  for (let coin of coins) {\n    if (change[coin] > 0) {\n      for (let count = 0; count < change[coin]; count++) {\n        array.push(coin);\n      }\n    }\n  }\n  return array;\n}\n\nexport function sleep(ms, resolve) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRandomInt, getDarkerColor, getCoinRadius } from './../helpers.js'\n\nexport const COIN_COLOR = '#ffdb4d';\n\nexport default function Coin(props) {\n  const color = COIN_COLOR;\n  const radius = getCoinRadius(props.faceValue);\n  const darkColor = getDarkerColor(color, 50);\n  const circleStyle = {\n    fill: color,\n    cx: props.cx,\n    cy: props.cy,\n    r: radius,\n    stroke: darkColor,\n    strokeWidth: 3\n  }\n  const textStyle = {\n    textAnchor: \"middle\",\n    fontFamily: \"Galada\",\n    fontWeight: \"500\",\n    fontSize: radius * 1.2,\n    fill: darkColor,\n    fontStyle: \"italic\",\n    lineHeight: 1,\n    letterSpacing: -3,\n  }\n\n  return (\n    <g\n      className=\"coin\"\n    >\n      <circle style={circleStyle}/>\n      <text\n        x={props.cx}\n        y={props.cy}\n        style={textStyle}\n        dy=\".3em\"\n      >\n        {props.faceValue}¢\n      </text>\n      <path d={`M${props.cx},${props.cy - radius - 2} a1,1 0 0,0 0,${radius * 2 + 4}`}\n        fill=\"yellow\"\n        opacity=\".5\"\n      />\n    </g>\n  );\n}\n\nCoin.propTypes = {\n  faceValue: PropTypes.number.isRequired,\n  cx: PropTypes.number.isRequired,\n  cy: PropTypes.number.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputRange from 'react-input-range';\n\nexport function InputField(props) {\n  return (\n    <input className=\"input-field\"\n      id={props.id}\n      value={props.value}\n      onChange={props.onChange}\n      type={props.type}\n      placeholder={props.placeholder}\n      step={props.step}\n      disabled={props.disabled}\n    />\n  );\n}\n\nInputField.propTypes = {\n  id: PropTypes.number,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  step: PropTypes.number.isRequired,\n  disabled: PropTypes.bool\n}\n\nexport function SliderField(props) {\n  return (\n    <InputRange\n      step={1}\n      minValue={props.minValue}\n      maxValue={props.maxValue}\n      formatLabel={value => `${value}${props.format || \"\"}`}\n      value={props.value}\n      onChange={props.onChange}\n      step={props.step}\n    />\n  );\n}\n\nSliderField.propTypes = {\n  minValue: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  format: PropTypes.string\n}\n\nexport function DoubleSliderField(props) {\n  return (\n    <InputRange\n      step={1}\n      minValue={props.minValue}\n      maxValue={props.maxValue}\n      formatLabel={value => `${value}${props.format || \"\"}`}\n      value={props.value}\n      onChange={props.onChange}\n      step={props.step}\n    />\n  );\n}\n\nDoubleSliderField.propTypes = {\n  minValue: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  format: PropTypes.string\n}\n\nexport function Button(props) {\n  return (\n    <button\n      onClick={props.onClick}\n      className='btn button-accent'\n    >\n      {props.text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport function Toggle(props) {\n  return (\n    <div className=\"can-toggle\">\n      <input\n        id=\"a\"\n        type=\"checkbox\"\n        checked={props.chekced}\n        onChange={props.onChange}\n      />\n      <label htmlFor=\"a\">\n        <div\n          className=\"can-toggle__switch\"\n          data-checked={props.checkedText}\n          data-unchecked={props.uncheckedText}\n        ></div>\n      </label>\n    </div>\n  )\n}\n\nToggle.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  checkedText: PropTypes.string.isRequired,\n  uncheckedText: PropTypes.string.isRequired\n}\n\nexport function CheckBox(props) {\n  return (\n    <input\n      type=\"checkbox\"\n      id={props.id}\n      checked={props.checked}\n      onChange={props.onChange}\n    />\n  );\n}\n\nCheckBox.propTypes = {\n  id: PropTypes.number,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n","export function getCoinNums(coinSizes, allCoinNums) {\n  const coinNums = {};\n  coinSizes.forEach((coin) => {\n    if (allCoinNums[coin].active) {\n      coinNums[coin] = allCoinNums[coin].value;\n    }\n  });\n  return coinNums;\n}\n\nexport function updateCoinNums(change, coinNums, coins) {\n  for (let coin of coins) {\n    coinNums[coin] -= change[coin];\n  }\n}\n\nexport function getMaxCoinNum(coinNums, coinSizes) {\n  let maxNum = 0;\n  for (let coin of coinSizes) {\n    maxNum = coinNums[coin] > maxNum ? coinNums[coin] : maxNum;\n  }\n  return maxNum;\n}\n\nexport function getMinCoinNum(coinNums, coinSizes) {\n  let minNum = getMaxCoinNum(coinNums, coinSizes) + 1;\n  for (let coin of coinSizes) {\n    minNum = coinNums[coin] < minNum ? coinNums[coin] : minNum;\n  }\n  return minNum;\n}\n\nexport function getMinCoins(coinNums, changeSum, coinSizes, prioritization) {\n  let minCoins = 0;\n  if (prioritization) {\n    minCoins = getAmountCoeff(\n      coinNums,\n      getMinCoinNum(coinNums, coinSizes), coinSizes\n    ) * changeSum;\n  } else {\n    minCoins = changeSum;\n  }\n  return minCoins\n}\n\nexport function getAmountCoeff(coinNums, coinAmount, coinSizes) {\n  return getMaxCoinNum(coinNums, coinSizes) / coinAmount;\n}\n\n// Create an array of length equal to che change sum\n// so that each consecutive sum is calculated against prevoius sums\n// Each element in the array contains an object, which holds\n// the minimum amount of coins to get this sum\n// and amount of each coin separately\nexport function getAmountsArray(changeSum, coinSizes, coinNums, prioritization) {\n  // Every amount (except from 0 cents) has maximum amount of coins\n  // So that we can compare real values with these biggest amounts\n  const entry = {}\n  entry.minCoins = getMinCoins(coinNums, changeSum, coinSizes, prioritization);\n  coinSizes.forEach(coin => { entry[coin] = 0; });\n  const amounts = new Array(changeSum + 1);\n  amounts.fill(0);\n  amounts.forEach((elem, index, array) => {\n    array[index] = Object.assign({}, entry);\n  });\n  // Zero amount always has zero coins (obviously)\n  amounts[0].minCoins = 0;\n  return amounts;\n}\n\nexport function getChange(amountsArray, coinNums, coinSizes, prioritization) {\n  // Coefficient is used to adjust particular coin 'value' depending on\n  // How many coins of this value remain\n  let amountCoeff = 1;\n  // Iterate through each amount of change in the array\n  // Start form amount of 1 coin\n  // since the will be no coins for 0 cent amount anyway\n  for (let amount = 1; amount < amountsArray.length; amount++) {\n    // Check every coin\n    let foundChange = false;\n    for (let coin of coinSizes) {\n      // Omit coins if their value is more than the amount itself, e.g.\n      // There is no need to check if change of 3 can be given with 5 cent coin\n      if (coin <= amount && coinNums[coin] > 0) {\n        if (prioritization) {\n          amountCoeff = getAmountCoeff(coinNums, coinNums[coin], coinSizes);\n        }\n        // Calculate the difference between the amount and coin value\n        const diff = amount - coin;\n        // Get the minimum amount of coins which\n        // where calculated for that difference\n        // and compare 1 current coin + coins at difference\n        // with current minCoins which is set for this amount\n        // If the sum is less, then override minCoins with the new result,\n        // Change all separate coins to values from difference and increment\n        // current coin by 1 (the coin which is added at this step)\n        if (amountsArray[diff].minCoins + amountCoeff <= amountsArray[amount].minCoins) {\n          // Copy all coin values to current amount\n          amountsArray[amount] = Object.assign({}, amountsArray[diff]);\n          // Increment the minCoins amount\n          amountsArray[amount].minCoins += amountCoeff;\n          // Increment the current coin count by one\n          amountsArray[amount][coin] += 1;\n          foundChange = true;\n        }\n      }\n    }\n    if (!foundChange) {\n      console.log(\"Didn't find change!\");\n      return amountsArray.slice(-1)[0];\n    }\n  }\n  return amountsArray.slice(-1)[0];\n}\n\n// let coinNums = getCoinNums(COIN_SIZES);\n// for (let count = 0; count < CYCLES_AMOUNT; count++) {\n//   const change_sum = getRandomInt(1, MAX_CHANGE);\n//   const array = getAmountsArray(change_sum, COIN_SIZES);\n//   const change = getChange(array, coinNums);\n//   updateCoinNums(change, coinNums);\n// }\n// if (!WITH_COEFF) {\n//   console.log('-- Без приоретизации --');\n// } else {\n//   console.log('-- С приоретизацией --');\n// }\n// console.log('Осталось: ');\n// for (let coin of COIN_SIZES) {\n//   console.log(`${coin}-копеечных: ${coinNums[coin]}`);\n// }\n\n// WITH_COEFF = !WITH_COEFF;\n//\n// coinNums = getCoinNums(COIN_SIZES);\n// for (let count = 0; count < CYCLES_AMOUNT; count++) {\n//   const change_sum = getRandomInt(1, MAX_CHANGE);\n//   const array = getAmountsArray(change_sum, COIN_SIZES);\n//   const change = getChange(array, coinNums);\n//   updateCoinNums(change, coinNums);\n// }\n// if (!WITH_COEFF) {\n//   console.log('-- Без приоретизации --');\n// } else {\n//   console.log('-- С приоретизацией --');\n// }\n// console.log('Осталось: ');\n// for (let coin of COIN_SIZES) {\n//   console.log(`${coin}-копеечных: ${coinNums[coin]}`);\n// }\n","import * as d3 from \"d3\";\n\nexport function clearSVG() {\n  let svg = d3.select('svg');\n  svg.selectAll('g').remove();\n}\n\nexport async function drawCoinNumbers(coinSizes, coinNumsCollection) {\n  const SCREEN_BREAKPOINT = 768;\n  // Animation duration\n  const duration = 100;\n  // Number on bars to draw\n  const n = coinSizes.length;\n  // Size of one bar in pixels\n  const barSize = window.innerWidth < SCREEN_BREAKPOINT ? 40 : 70;\n  // Margin and bar chart dimentions\n  const margin = {\n    top: Math.max(80, (window.innerHeight - 600) / 2),\n    right: Math.max(65, (window.innerWidth - 500) / 2),\n    bottom: Math.max(80, (window.innerHeight - 600) / 2),\n    left: Math.max(65, (window.innerWidth - 500) / 2)\n  };\n  let width = window.innerWidth;\n  let height = Math.max(500, window.innerHeight - 54);\n\n  let svg = d3.select('svg');\n\n  clearSVG();\n\n  // X and Y scale\n  const xScale = d3.scaleBand()\n    .domain(coinSizes)\n    .rangeRound([margin.left, margin.left + barSize * (n + 1 + 0.1)])\n    .padding(0.1);\n  // const yScale = d3.scaleLinear()\n  //   .domain([0, d3.max(coinSizes.map(coin => coinNums[coin]))])\n  //   .nice()\n  //   .range([height - margin.bottom, margin.top]);\n  const yScale = d3.scaleLinear().range([height - margin.bottom, margin.top]);\n\n  // X and Y axis\n  const xAxis = g => g\n    .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n    .call(d3.axisBottom(xScale).tickFormat(coin => (coin + \"¢\")));\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x-axis\")\n    .call(xAxis);\n\n  function yAxis(svg) {\n    const g = svg.append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n\n    const axis = d3.axisLeft(yScale)\n      .ticks(height / 100)\n      .tickSizeOuter(0)\n      .tickSizeInner(-barSize * (n + 1));\n\n    return (_, transition) => {\n        g.transition(transition).call(axis);\n        g.select(\".tick:first-of-type text\").remove();\n        g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"#eeeeee\");\n        g.select(\".domain\").remove();\n    };\n  }\n\n  // Bars and labels\n  function bars(svg) {\n    let bar = svg.append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"fill\", '#ffdb4d')\n      .selectAll(\"rect\");\n\n    return (coinNums, transition) => bar = bar\n      .data(coinSizes, coin => coinNums[coin])\n      .join(\n        enter => enter.append(\"rect\")\n          .attr(\"x\", coin => xScale(coin))\n          .attr(\"y\", coin => yScale(coinNums[coin]))\n          .attr(\"height\", coin => yScale(0) - yScale(coinNums[coin]))\n          .attr(\"width\", xScale.bandwidth()),\n        update => update,\n        exit =>exit.transition(transition).remove()\n          .attr(\"y\", coin => yScale(coinNums[coin]))\n          .attr(\"height\", coin => yScale(0) - yScale(coinNums[coin]))\n      )\n      .call(bar => bar.transition(transition)\n        .attr(\"y\", coin => yScale(coinNums[coin]))\n        .attr(\"height\", coin => yScale(0) - yScale(coinNums[coin])));\n  }\n\n  function labels(svg) {\n    let label = svg.append('g')\n      .style('font-variant-numeric', 'tabular-nums')\n      .style('font-size', '16')\n      .style('fill', 'rgb(205, 169, 27)')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (coinNums, transition) => label = label\n      .data(coinSizes, coin => coinNums[coin])\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${xScale(d)}, ${yScale(coinNums[d])})`)\n          .attr('x', xScale.bandwidth() / 2)\n          .attr('y', -10)\n          .text(d => coinNums[d]),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .attr('transform', d => `translate(${xScale(d)}, ${yScale(coinNums[d])})`)\n          .text(d => coinNums[d])\n      )\n      .call(labels => labels.transition(transition)\n        .attr('transform', d => `translate(${xScale(d)}, ${yScale(coinNums[d])})`))\n        .text(d => coinNums[d])\n  }\n\n  function header(svg) {\n    let header = svg.append('g')\n      .style('font-variant-numeric', 'tabular-nums')\n      .style('font-size', '18')\n      .style('fill', '#333')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (cycles, transition) => header = header\n      .data([cycles], cycles => cycles)\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${margin.left + (barSize * (n + 1 + 0.1)) / 2}, ${margin.top - 40})`)\n          .attr('x', 0)\n          .attr('y', 0)\n          .text('Cycles passed: ' + cycles),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .text('Cycles passed: ' + cycles)\n      )\n      .call(labels => labels.transition(transition)\n        .text('Cycles passed: ' + cycles))\n    }\n\n  const updateHeader = header(svg);\n  const updateBars = bars(svg);\n  const updateAxis = yAxis(svg);\n  const updateLabels = labels(svg);\n\n  let cycles = 0;\n  let prevNums = {};\n  for (const coinNums of coinNumsCollection) {\n    const transition = svg.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n\n    yScale.domain([0, d3.max(coinSizes, coin => coinNums[coin])]);\n    cycles += 100;\n\n    // Check if algorithm ran cout of needed coins and doesn't use any others\n    let end = true;\n    for (let coin of coinSizes) {\n      if (prevNums[coin] !== coinNums[coin]) {\n        end = false;\n      }\n    }\n    if (end) {\n      break;\n    }\n\n    updateHeader(cycles, transition);\n    updateAxis(coinNums, transition);\n    updateBars(coinNums, transition);\n    updateLabels(coinNums, transition);\n\n    prevNums = coinNums;\n    await transition.end();\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport Coin from './components/coins';\nimport {\n  InputField,\n  SliderField,\n  DoubleSliderField,\n  Button,\n  Toggle,\n  CheckBox\n} from './components/input';\nimport {\n  getRandomInt,\n  getCoinRadius,\n  generateCoinCoords,\n  getCoinsArray,\n  getDarkerColor,\n  sleep\n} from './helpers';\nimport {\n  getCoinNums,\n  getAmountsArray,\n  getChange,\n  updateCoinNums\n} from './algorithm';\nimport { drawCoinNumbers, clearSVG } from './barchart';\n\nconst COIN_SIZES = [1, 2, 5, 10, 25, 50]; // Can be any amount and any values\nconst COINS_NUMS = {\n  1: {\n    value: 10000,\n    active: true,\n  },\n  2: {\n    value: 10000,\n    active: true,\n  },\n  5: {\n    value: 10000,\n    active: true,\n  },\n  10: {\n    value: 10000,\n    active: true,\n  },\n  25: {\n    value: 10000,\n    active: true,\n  },\n  50: {\n    value: 10000,\n    active: true,\n  }\n};\nvar PRIORITIZATION = false;\n\nfunction App() {\n  // SVG dimentions\n  const width = window.innerWidth;\n  const height = window.innerHeight - 54;\n  // General coin values\n  let [menu, setMenu] = useState(false);\n  let [coins, setCoins] = useState(COIN_SIZES);\n  let [coinNumbers, setCoinNumbers] = useState(COINS_NUMS);\n  let [coinCoords, setCoinCoords] = useState([]);\n\n  let [simulation, setSimulation] = useState(false);\n  // NORMAL mode\n  let [changeRange, setChangeRange] = useState({min: 1, max: 100});\n  let [changeValue, setChangeValue] = useState(68);\n  let [changeCoins, setChangeCoins] = useState([]);\n  // SIMULATION mode\n  let [loading, setLoading] = useState(false);\n  let [cycles, setCycles] = useState(10000);\n  let [withCoeff, setWithCoeff] = useState(true);\n  let [coinNumbersSim, setCoinNumbsersSim] = useState(JSON.parse(JSON.stringify(COINS_NUMS)))\n  let [prioritization, setPrioritization] = useState(true);\n\n  function toggleMenu(event) {\n    setMenu(!menu);\n  }\n\n  function handleSimulationChange(event) {\n    setSimulation(!simulation);\n  }\n\n  // Functions for NORMAL mode\n  function handleChangeValueChange(event) {\n    setChangeValue(event);\n  }\n\n  function calculateChange(event) {\n    event.preventDefault();\n    const coinNums = getCoinNums(coins, coinNumbers);\n    const amountsArray = getAmountsArray(\n      changeValue,\n      coins,\n      coinNums,\n      PRIORITIZATION\n    );\n    const change = getChange(amountsArray, coinNums, coins, PRIORITIZATION);\n    const coinsArray = getCoinsArray(change, coins);\n    const coords = generateCoinCoords(coinsArray, width, height);\n    setCoinCoords(coords);\n  }\n\n  useEffect(() => {}, [coinCoords])\n\n  // Functions for SIMULATION mode\n  function handleCyclesChange(event) {\n    setCycles(event);\n  }\n\n  function handleCoinNumbersChange(event) {\n    const coin = event.target.id;\n    const value = Number(event.target.value);\n    setCoinNumbsersSim(state => {\n      state[coin].value = value > 100000 ? 100000 : value;\n      return {...state};\n    });\n  }\n\n  function handleCoinActiveChange(event) {\n    const coin = event.target.id;\n    setCoinNumbsersSim(state => {\n      state[coin].active = !state[coin].active;\n      return {...state};\n    });\n  }\n\n  function handleChangeRangeChange(event) {\n    const newRange = {\n      min: event.min || 1,\n      max: event.max <= 100 ? event.max : 100\n    }\n    setChangeRange(newRange);\n  }\n\n  function handlePrioritizationChange(event) {\n    setPrioritization(!prioritization);\n  }\n\n  function getActiveCoins(coinNums) {\n    let array = [];\n    for (let coin of coins) {\n      if (coinNums[coin].active) {\n        array.push(coin);\n      }\n    }\n    return array;\n  }\n\n  function handleSimulation(event) {\n    event.preventDefault();\n    setLoading(true, setTimeout(runSimulation, 100));\n  }\n\n  function runSimulation() {\n    let counter = 0;\n    const coinNumsCollection = [];\n    const activeCoins = getActiveCoins(coinNumbersSim);\n    let coinNums = getCoinNums(activeCoins, coinNumbersSim);\n    for (let count = 0; count < cycles; count++) {\n      const changeSum = getRandomInt(changeRange.min, changeRange.max);\n      const amountsArray = getAmountsArray(\n        changeSum,\n        activeCoins,\n        coinNums,\n        prioritization\n      );\n      const change = getChange(\n        amountsArray,\n        coinNums,\n        activeCoins,\n        prioritization\n      );\n      updateCoinNums(change, coinNums, activeCoins);\n      counter += 1;\n      if (counter == 100) {\n        coinNumsCollection.push({...coinNums});\n        counter = 0;\n      }\n    }\n    setLoading(false);\n    drawCoinNumbers(activeCoins, coinNumsCollection);\n  }\n\n  useEffect(() => {\n    console.log(simulation);\n    if (!simulation) {\n      setCoinNumbers(JSON.parse(JSON.stringify(COINS_NUMS)));\n      clearSVG();\n    }\n  }, [simulation])\n\n  return (\n    <React.Fragment>\n      <nav className='navbar navbar-minimal d-flex justify-content-between'>\n        <div>\n          <Button\n            onClick={toggleMenu}\n            text=\"Menu\"\n          />\n        </div>\n        <div>\n          {simulation ? (\n            <Button\n              onClick={handleSimulation}\n              text=\"Run simulation\"\n            />\n          ) : (\n            <Button\n              onClick={calculateChange}\n              text=\"Get change\"\n            />\n          )}\n        </div>\n      </nav>\n      <div className={menu ? \"pt-4 pb-4 pl-4 pr-4 sidebar\" : \"pt-4 pb-4 sidebar sidebar-hidden\"}>\n        <button className=\"sidebar-close text-white\" onClick={toggleMenu}>&times;</button>\n        <form>\n          <h5 className='text-center mb-1'>Mode</h5>\n          <Toggle\n            checked={simulation}\n            onChange={handleSimulationChange}\n            uncheckedText=\"Normal\"\n            checkedText=\"Simulation\"\n          />\n          {simulation ? (\n            <React.Fragment>\n              <div\n                className={prioritization ? (\n                  \"d-flex justify-content-center pt-2\"\n                ) : (\n                  \"d-flex justify-content-center pt-2 disabled-field\"\n                )}\n              >\n                <label htmlFor={0} className=\"checkbox-container adjustable-width text-white\">\n                  Smart mode\n                  <CheckBox\n                    id={0}\n                    checked={prioritization}\n                    onChange={handlePrioritizationChange}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              </div>\n              <h5 className='text-center mb-2 mt-3'>Cycles</h5>\n              <SliderField\n                minValue={1000}\n                maxValue={100000}\n                value={cycles}\n                onChange={handleCyclesChange}\n                step={1000}\n              />\n              <h5 className='text-center mb-2 mt-3'>Change range</h5>\n              <DoubleSliderField\n                minValue={1}\n                maxValue={100}\n                value={changeRange}\n                onChange={handleChangeRangeChange}\n                step={1}\n                format={\" ¢\"}\n              />\n              <h5 className='text-center mb-2 mt-3'>Coins</h5>\n              {coins.map(coin => (\n                <div\n                  key={coin}\n                  className=\"mb-2 d-flex text-white justify-content-center align-items-center\"\n                >\n                  <div className={coinNumbersSim[coin].active ? \"\" : \"disabled-field\"}>\n                    <label htmlFor={coin} className=\"checkbox-container\">\n                      {coin}¢ &times;\n                      <CheckBox\n                        id={coin}\n                        checked={coinNumbersSim[coin].active}\n                        onChange={handleCoinActiveChange}\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                  <div className={coinNumbersSim[coin].active ? \"\" : \"disabled-field\"}>\n                    <InputField\n                      id={coin}\n                      value={coinNumbersSim[coin].value}\n                      onChange={handleCoinNumbersChange}\n                      type=\"number\"\n                      placeholder=\"Amount\"\n                      step={100}\n                      disabled={!coinNumbersSim[coin].active}\n                    />\n                  </div>\n                </div>\n              ))}\n              <br/>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <h5 className='text-center mb-2 mt-3'>Change amount</h5>\n              <SliderField\n                minValue={changeRange.min}\n                maxValue={changeRange.max}\n                value={changeValue}\n                onChange={handleChangeValueChange}\n                format={\" ¢\"}\n              />\n            </React.Fragment>\n          )}\n        </form>\n      </div>\n      {loading ? (\n        <div className=\"lds-grid\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      ) : (\"\")}\n      <svg className=\"main-screen\">\n        {coinCoords.length > 0 && !simulation && coinCoords.map(coin => (\n          <Coin\n            faceValue={coin.value}\n            key={coin.x + \":\" + coin.y}\n            cx={coin.x}\n            cy={coin.y}\n          />\n        ))}\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-input-range/lib/css/index.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}