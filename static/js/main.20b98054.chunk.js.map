{"version":3,"sources":["helpers.js","components/coins.js","components/input.js","algorithm.js","components/modal.js","barchart.js","text.js","App.js","serviceWorker.js","index.js"],"names":["SVG_WIDTH_MARGIN","Math","max","window","innerWidth","SVG_HEIGHT_MARGIN","innerHeight","getRandomInt","min","ceil","floor","random","getCoinRadius","faceValue","Coin","props","radius","darkColor","color","diff","red","parseInt","slice","green","blue","toString","getDarkerColor","circleStyle","fill","cx","cy","r","stroke","strokeWidth","textStyle","textAnchor","fontFamily","fontWeight","fontSize","fontStyle","lineHeight","letterSpacing","className","style","x","y","dy","d","opacity","InputField","id","value","onChange","type","placeholder","step","disabled","SliderField","minValue","maxValue","formatLabel","format","DoubleSliderField","Button","onClick","text","MenuButton","Toggle","checked","chekced","htmlFor","data-checked","checkedText","data-unchecked","uncheckedText","CheckBox","getCoinNums","coinSizes","allCoinNums","coinNums","forEach","coin","active","updateCoinNums","change","coins","getMaxCoinNum","maxNum","getMinCoins","changeSum","prioritization","getAmountCoeff","minNum","getMinCoinNum","coinAmount","getAmountsArray","entry","minCoins","amounts","Array","elem","index","array","Object","assign","getChange","amountsArray","amountCoeff","amount","length","foundChange","console","log","InfoModal","Fragment","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","title","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","body","clearSVG","d3","selectAll","remove","coinCollection","yAxis1","yAxis2","bars1","bars2","labels1","labels2","header1","header2","message","a","svg","header","append","height","transition","data","join","enter","attr","margin2","left","barSize","n","update","exit","call","labels","cycles","end","top","margin1","label","xScale2","yScale2","bandwidth","xScale1","yScale1","bar","g","axis","ticks","tickSizeOuter","tickSizeInner","_","select","right","bottom","domain","rangeRound","padding","range","xAxis1","tickFormat","xAxis2","updateHeader1","updateBars1","updateAxis1","updateLabels1","updateHeader2","updateBars2","updateAxis2","updateLabels2","chart1Finished","chart2Finished","smart","dumb","animationLength","prevNums","duration","ease","noCoins","COIN_SIZES","COINS_NUMS","1","2","5","10","25","50","App","width","useState","menu","setMenu","coinNumbers","setCoinNumbers","coinCoords","setCoinCoords","simulation","setSimulation","changeRange","setChangeRange","changeValue","setChangeValue","loading","setLoading","setCycles","JSON","parse","stringify","coinNumbersSim","setCoinNumbsersSim","toggleMenu","event","handleCoinNumbersChange","target","Number","state","handleCoinActiveChange","runSimulation","counter","coinNumsCollection","activeCoins","push","getActiveCoins","count","change1","change2","drawCoinNumbers","useEffect","preventDefault","setTimeout","coords","windowWidth","windowHeight","r1","x1","y1","r2","x2","y2","coordsArray","newCoords","collide","otherCoords","generateCoinCoords","getCoinsArray","newRange","map","key","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20b98054.chunk.js","sourcesContent":["const SVG_WIDTH_MARGIN = Math.max(80, (window.innerWidth - 350) / 2);\nconst SVG_HEIGHT_MARGIN = Math.max(80, (window.innerHeight - 350) / 2);\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getDarkerColor(color, diff) {\n  const red = parseInt(color.slice(1, 3), 16) - diff;\n  const green = parseInt(color.slice(3, 5), 16) - diff;\n  const blue = parseInt(color.slice(5, 7), 16) - diff;\n  return `#${red.toString(16)}${green.toString(16)}${blue.toString(16)}`\n}\n\nexport function getCoinRadius(faceValue) {\n  const baseRadius = 50;\n   return baseRadius + (faceValue - baseRadius) / 3.5;\n}\n\nexport function checkCollision(r1, x1, y1, r2, x2, y2) {\n  return (x2 - x1) ** 2 + (y2 - y1) ** 2 < (r1 + r2) ** 2;\n}\n\n// TODO: make coords more structured\nexport function generateCoinCoords(coins, windowWidth, windowHeight) {\n  let coordsArray = [];\n  let newCoords = {};\n  for (let coin of coins) {\n    let collide = true;\n    while (collide) {\n      newCoords = {\n        value: coin,\n        x: getRandomInt(SVG_WIDTH_MARGIN, windowWidth - SVG_WIDTH_MARGIN),\n        y: getRandomInt(SVG_HEIGHT_MARGIN, windowHeight - SVG_HEIGHT_MARGIN)\n      };\n      collide = false;\n      for (let otherCoords of coordsArray) {\n        if (otherCoords.value && checkCollision(\n          getCoinRadius(newCoords.value),\n          newCoords.x,\n          newCoords.y,\n          getCoinRadius(otherCoords.value),\n          otherCoords.x,\n          otherCoords.y,\n        )) {\n          collide = true;\n        }\n      }\n      if (!collide) {\n        coordsArray.push(newCoords);\n      }\n    }\n  }\n  return coordsArray;\n}\n\nexport function getCoinsArray(change, coins) {\n  const array = [];\n  for (let coin of coins) {\n    if (change[coin] > 0) {\n      for (let count = 0; count < change[coin]; count++) {\n        array.push(coin);\n      }\n    }\n  }\n  return array;\n}\n\nexport function sleep(ms, resolve) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDarkerColor, getCoinRadius } from './../helpers.js'\n\nexport const COIN_COLOR = '#ffdb4d';\n\nexport default function Coin(props) {\n  const color = COIN_COLOR;\n  const radius = getCoinRadius(props.faceValue);\n  const darkColor = getDarkerColor(color, 50);\n  const circleStyle = {\n    fill: color,\n    cx: props.cx,\n    cy: props.cy,\n    r: radius,\n    stroke: darkColor,\n    strokeWidth: 3\n  }\n  const textStyle = {\n    textAnchor: \"middle\",\n    fontFamily: \"Galada\",\n    fontWeight: \"500\",\n    fontSize: radius * 1.2,\n    fill: darkColor,\n    fontStyle: \"italic\",\n    lineHeight: 1,\n    letterSpacing: -3,\n  }\n\n  return (\n    <g\n      className=\"coin\"\n    >\n      <circle style={circleStyle}/>\n      <text\n        x={props.cx}\n        y={props.cy}\n        style={textStyle}\n        dy=\".3em\"\n      >\n        {props.faceValue}¢\n      </text>\n      <path d={`M${props.cx},${props.cy - radius - 2} a1,1 0 0,0 0,${radius * 2 + 4}`}\n        fill=\"yellow\"\n        opacity=\".5\"\n      />\n    </g>\n  );\n}\n\nCoin.propTypes = {\n  faceValue: PropTypes.number.isRequired,\n  cx: PropTypes.number.isRequired,\n  cy: PropTypes.number.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputRange from 'react-input-range';\n\nexport function InputField(props) {\n  return (\n    <input className=\"input-field\"\n      id={props.id}\n      value={props.value}\n      onChange={props.onChange}\n      type={props.type}\n      placeholder={props.placeholder}\n      step={props.step}\n      disabled={props.disabled}\n    />\n  );\n}\n\nInputField.propTypes = {\n  id: PropTypes.number,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  step: PropTypes.number.isRequired,\n  disabled: PropTypes.bool\n}\n\nexport function SliderField(props) {\n  return (\n    <InputRange\n      minValue={props.minValue}\n      maxValue={props.maxValue}\n      formatLabel={value => `${value}${props.format || \"\"}`}\n      value={props.value}\n      onChange={props.onChange}\n      step={props.step}\n    />\n  );\n}\n\nSliderField.propTypes = {\n  minValue: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  format: PropTypes.string\n}\n\nexport function DoubleSliderField(props) {\n  return (\n    <InputRange\n      minValue={props.minValue}\n      maxValue={props.maxValue}\n      formatLabel={value => `${value}${props.format || \"\"}`}\n      value={props.value}\n      onChange={props.onChange}\n      step={props.step}\n    />\n  );\n}\n\nDoubleSliderField.propTypes = {\n  minValue: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  format: PropTypes.string\n}\n\nexport function Button(props) {\n  return (\n    <button\n      onClick={props.onClick}\n      className='btn button-accent'\n    >\n      {props.text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport function MenuButton(props) {\n  return (\n    <button\n      onClick={props.onClick}\n      className='menu-button'\n    >\n      {props.text}\n    </button>\n  );\n}\n\nMenuButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport function Toggle(props) {\n  return (\n    <div className=\"can-toggle\">\n      <input\n        id=\"a\"\n        type=\"checkbox\"\n        checked={props.chekced}\n        onChange={props.onChange}\n      />\n      <label htmlFor=\"a\">\n        <div\n          className=\"can-toggle__switch\"\n          data-checked={props.checkedText}\n          data-unchecked={props.uncheckedText}\n        ></div>\n      </label>\n    </div>\n  )\n}\n\nToggle.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  checkedText: PropTypes.string.isRequired,\n  uncheckedText: PropTypes.string.isRequired\n}\n\nexport function CheckBox(props) {\n  return (\n    <input\n      type=\"checkbox\"\n      id={props.id}\n      checked={props.checked}\n      onChange={props.onChange}\n    />\n  );\n}\n\nCheckBox.propTypes = {\n  id: PropTypes.number,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n","export function getCoinNums(coinSizes, allCoinNums) {\n  const coinNums = {};\n  coinSizes.forEach((coin) => {\n    if (allCoinNums[coin].active) {\n      coinNums[coin] = allCoinNums[coin].value;\n    }\n  });\n  return coinNums;\n}\n\nexport function updateCoinNums(change, coinNums, coins) {\n  for (let coin of coins) {\n    coinNums[coin] -= change[coin];\n  }\n}\n\nexport function getMaxCoinNum(coinNums, coinSizes) {\n  let maxNum = 0;\n  for (let coin of coinSizes) {\n    maxNum = coinNums[coin] > maxNum ? coinNums[coin] : maxNum;\n  }\n  return maxNum;\n}\n\nexport function getMinCoinNum(coinNums, coinSizes) {\n  let minNum = getMaxCoinNum(coinNums, coinSizes) + 1;\n  for (let coin of coinSizes) {\n    minNum = coinNums[coin] < minNum ? coinNums[coin] : minNum;\n  }\n  return minNum;\n}\n\nexport function getMinCoins(coinNums, changeSum, coinSizes, prioritization) {\n  let minCoins = 0;\n  if (prioritization) {\n    minCoins = getAmountCoeff(\n      coinNums,\n      getMinCoinNum(coinNums, coinSizes), coinSizes\n    ) * changeSum;\n  } else {\n    minCoins = changeSum;\n  }\n  return minCoins\n}\n\nexport function getAmountCoeff(coinNums, coinAmount, coinSizes) {\n  return getMaxCoinNum(coinNums, coinSizes) / coinAmount;\n}\n\n// Create an array of length equal to che change sum\n// so that each consecutive sum is calculated against prevoius sums\n// Each element in the array contains an object, which holds\n// the minimum amount of coins to get this sum\n// and amount of each coin separately\nexport function getAmountsArray(changeSum, coinSizes, coinNums, prioritization) {\n  // Every amount (except from 0 cents) has maximum amount of coins\n  // So that we can compare real values with these biggest amounts\n  const entry = {}\n  entry.minCoins = getMinCoins(coinNums, changeSum, coinSizes, prioritization);\n  coinSizes.forEach(coin => { entry[coin] = 0; });\n  const amounts = new Array(changeSum + 1);\n  amounts.fill(0);\n  amounts.forEach((elem, index, array) => {\n    array[index] = Object.assign({}, entry);\n  });\n  // Zero amount always has zero coins (obviously)\n  amounts[0].minCoins = 0;\n  return amounts;\n}\n\nexport function getChange(amountsArray, coinNums, coinSizes, prioritization) {\n  // Coefficient is used to adjust particular coin 'value' depending on\n  // How many coins of this value remain\n  let amountCoeff = 1;\n  // Iterate through each amount of change in the array\n  // Start form amount of 1 coin\n  // since the will be no coins for 0 cent amount anyway\n  for (let amount = 1; amount < amountsArray.length; amount++) {\n    // Check every coin\n    let foundChange = false;\n    for (let coin of coinSizes) {\n      // Omit coins if their value is more than the amount itself, e.g.\n      // There is no need to check if change of 3 can be given with 5 cent coin\n      if (coin <= amount && coinNums[coin] > 0) {\n        if (prioritization) {\n          amountCoeff = getAmountCoeff(coinNums, coinNums[coin], coinSizes);\n        }\n        // Calculate the difference between the amount and coin value\n        const diff = amount - coin;\n        // Get the minimum amount of coins which\n        // where calculated for that difference\n        // and compare 1 current coin + coins at difference\n        // with current minCoins which is set for this amount\n        // If the sum is less, then override minCoins with the new result,\n        // Change all separate coins to values from difference and increment\n        // current coin by 1 (the coin which is added at this step)\n        if (amountsArray[diff].minCoins + amountCoeff <= amountsArray[amount].minCoins) {\n          // Copy all coin values to current amount\n          amountsArray[amount] = Object.assign({}, amountsArray[diff]);\n          // Increment the minCoins amount\n          amountsArray[amount].minCoins += amountCoeff;\n          // Increment the current coin count by one\n          amountsArray[amount][coin] += 1;\n          foundChange = true;\n        }\n      }\n    }\n    if (!foundChange) {\n      console.log(\"Didn't find change!\");\n      return amountsArray.slice(-1)[0];\n    }\n  }\n  return amountsArray.slice(-1)[0];\n}\n\n// let coinNums = getCoinNums(COIN_SIZES);\n// for (let count = 0; count < CYCLES_AMOUNT; count++) {\n//   const change_sum = getRandomInt(1, MAX_CHANGE);\n//   const array = getAmountsArray(change_sum, COIN_SIZES);\n//   const change = getChange(array, coinNums);\n//   updateCoinNums(change, coinNums);\n// }\n// if (!WITH_COEFF) {\n//   console.log('-- Без приоретизации --');\n// } else {\n//   console.log('-- С приоретизацией --');\n// }\n// console.log('Осталось: ');\n// for (let coin of COIN_SIZES) {\n//   console.log(`${coin}-копеечных: ${coinNums[coin]}`);\n// }\n\n// WITH_COEFF = !WITH_COEFF;\n//\n// coinNums = getCoinNums(COIN_SIZES);\n// for (let count = 0; count < CYCLES_AMOUNT; count++) {\n//   const change_sum = getRandomInt(1, MAX_CHANGE);\n//   const array = getAmountsArray(change_sum, COIN_SIZES);\n//   const change = getChange(array, coinNums);\n//   updateCoinNums(change, coinNums);\n// }\n// if (!WITH_COEFF) {\n//   console.log('-- Без приоретизации --');\n// } else {\n//   console.log('-- С приоретизацией --');\n// }\n// console.log('Осталось: ');\n// for (let coin of COIN_SIZES) {\n//   console.log(`${coin}-копеечных: ${coinNums[coin]}`);\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function InfoModal(props) {\n  return (\n    <React.Fragment>\n      <button type=\"button\" className=\"info-button\" data-toggle=\"modal\" data-target=\"#infoModal\">i</button>\n      <div className=\"modal fade\" id=\"infoModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"infoModalLabel\">{props.title}</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\" dangerouslySetInnerHTML={{__html: props.body}}>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nInfoModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n}\n","import * as d3 from \"d3\";\n\nexport function clearSVG() {\n  let svg = d3.select('svg');\n  svg.selectAll('g').remove();\n}\n\nexport async function drawCoinNumbers(coinSizes, coinCollection) {\n  const offsetY = 300;\n  const SCREEN_BREAKPOINT = 768;\n  // Animation duration\n  const duration = 100;\n  // Number on bars to draw\n  const n = coinSizes.length;\n  // Size of one bar in pixels\n  const barSize = window.innerWidth < SCREEN_BREAKPOINT ? 40 : 70;\n  // Margin and bar chart dimentions\n  const margin1 = {\n    top: 80,\n    right: Math.max(65, (window.innerWidth - 500) / 2),\n    bottom: 60 + offsetY,\n    left: Math.max(65, (window.innerWidth - 500) / 2)\n  };\n  const margin2 = {\n    top: 60 + offsetY,\n    right: Math.max(65, (window.innerWidth - 500) / 2),\n    bottom: 80,\n    left: Math.max(65, (window.innerWidth - 500) / 2)\n  };\n  let height = 600;\n\n  let svg = d3.select('svg');\n\n  clearSVG();\n\n  // X and Y scale\n  const xScale1 = d3.scaleBand()\n    .domain(coinSizes)\n    .rangeRound([margin1.left, margin1.left + barSize * (n + 1 + 0.1)])\n    .padding(0.1);\n  const yScale1 = d3.scaleLinear().range([height - margin1.bottom, margin1.top]);\n\n  const xScale2 = d3.scaleBand()\n    .domain(coinSizes)\n    .rangeRound([margin2.left, margin2.left + barSize * (n + 1 + 0.1)])\n    .padding(0.1);\n  const yScale2 = d3.scaleLinear().range([height - margin2.bottom, margin2.top]);\n\n  // X and Y axis\n  const xAxis1 = g => g\n    .attr(\"transform\", `translate(0,${height - margin1.bottom})`)\n    .call(d3.axisBottom(xScale1).tickFormat(coin => (coin + \"¢\")));\n  const xAxis2 = g => g\n    .attr(\"transform\", `translate(0,${height - margin2.bottom})`)\n    .call(d3.axisBottom(xScale2).tickFormat(coin => (coin + \"¢\")));\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x-axis\")\n    .call(xAxis1);\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x-axis\")\n    .call(xAxis2);\n\n  function yAxis1(svg) {\n    const g = svg.append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin1.left},0)`)\n\n    const axis = d3.axisLeft(yScale1)\n      .ticks(height / 100)\n      .tickSizeOuter(0)\n      .tickSizeInner(-barSize * (n + 1));\n\n    return (_, transition) => {\n        g.transition(transition).call(axis);\n        g.select(\".tick:first-of-type text\").remove();\n        g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"#eeeeee\");\n        g.select(\".domain\").remove();\n    };\n  }\n\n  function yAxis2(svg) {\n    const g = svg.append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin2.left},0)`)\n\n    const axis = d3.axisLeft(yScale2)\n      .ticks(height / 100)\n      .tickSizeOuter(0)\n      .tickSizeInner(-barSize * (n + 1));\n\n    return (_, transition) => {\n        g.transition(transition).call(axis);\n        g.select(\".tick:first-of-type text\").remove();\n        g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"#eeeeee\");\n        g.select(\".domain\").remove();\n    };\n  }\n\n  // Bars and labels\n  function bars1(svg) {\n    let bar = svg.append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"fill\", '#ffdb4d')\n      .selectAll(\"rect\");\n\n    return (coinNums, transition) => bar = bar\n      .data(coinSizes, coin => coinNums[coin])\n      .join(\n        enter => enter.append(\"rect\")\n          .attr(\"x\", coin => xScale1(coin))\n          .attr(\"y\", coin => yScale1(coinNums[coin]))\n          .attr(\"height\", coin => yScale1(0) - yScale1(coinNums[coin]))\n          .attr(\"width\", xScale1.bandwidth()),\n        update => update,\n        exit =>exit.transition(transition).remove()\n          .attr(\"y\", coin => yScale1(coinNums[coin]))\n          .attr(\"height\", coin => yScale1(0) - yScale1(coinNums[coin]))\n      )\n      .call(bar => bar.transition(transition)\n        .attr(\"y\", coin => yScale1(coinNums[coin]))\n        .attr(\"height\", coin => yScale1(0) - yScale1(coinNums[coin])));\n  }\n\n  function bars2(svg) {\n    let bar = svg.append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"fill\", '#ffdb4d')\n      .selectAll(\"rect\");\n\n    return (coinNums, transition) => bar = bar\n      .data(coinSizes, coin => coinNums[coin])\n      .join(\n        enter => enter.append(\"rect\")\n          .attr(\"x\", coin => xScale2(coin))\n          .attr(\"y\", coin => yScale2(coinNums[coin]))\n          .attr(\"height\", coin => yScale2(0) - yScale2(coinNums[coin]))\n          .attr(\"width\", xScale2.bandwidth()),\n        update => update,\n        exit =>exit.transition(transition).remove()\n          .attr(\"y\", coin => yScale2(coinNums[coin]))\n          .attr(\"height\", coin => yScale2(0) - yScale2(coinNums[coin]))\n      )\n      .call(bar => bar.transition(transition)\n        .attr(\"y\", coin => yScale2(coinNums[coin]))\n        .attr(\"height\", coin => yScale2(0) - yScale2(coinNums[coin])));\n  }\n\n  function labels1(svg) {\n    let label = svg.append('g')\n      .style('font-variant-numeric', 'tabular-nums')\n      .style('font-size', '16')\n      .style('fill', 'rgb(205, 169, 27)')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (coinNums, transition) => label = label\n      .data(coinSizes, coin => coinNums[coin])\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${xScale1(d)}, ${yScale1(coinNums[d])})`)\n          .attr('x', xScale1.bandwidth() / 2)\n          .attr('y', -10)\n          .text(d => coinNums[d]),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .attr('transform', d => `translate(${xScale1(d)}, ${yScale1(coinNums[d])})`)\n          .text(d => coinNums[d])\n      )\n      .call(labels => labels.transition(transition)\n        .attr('transform', d => `translate(${xScale1(d)}, ${yScale1(coinNums[d])})`))\n        .text(d => coinNums[d])\n  }\n\n  function labels2(svg) {\n    let label = svg.append('g')\n      .style('font-variant-numeric', 'tabular-nums')\n      .style('font-size', '16')\n      .style('fill', 'rgb(205, 169, 27)')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (coinNums, transition) => label = label\n      .data(coinSizes, coin => coinNums[coin])\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${xScale2(d)}, ${yScale2(coinNums[d])})`)\n          .attr('x', xScale2.bandwidth() / 2)\n          .attr('y', -10)\n          .text(d => coinNums[d]),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .attr('transform', d => `translate(${xScale2(d)}, ${yScale2(coinNums[d])})`)\n          .text(d => coinNums[d])\n      )\n      .call(labels => labels.transition(transition)\n        .attr('transform', d => `translate(${xScale2(d)}, ${yScale2(coinNums[d])})`))\n        .text(d => coinNums[d])\n  }\n\n  function header1(svg) {\n    let header = svg.append('g')\n      .style('font-variant-numeric', 'tabular-nums')\n      .style('font-size', '18')\n      .style('fill', '#333')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (cycles, transition) => header = header\n      .data([cycles], cycles => cycles)\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${margin1.left + (barSize * (n + 1 + 0.1)) / 2}, ${margin1.top - 40})`)\n          .attr('x', 0)\n          .attr('y', 0)\n          .text('DUMB MODE clients served: ' + cycles),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .text('DUMB MODE clients served: ' + cycles)\n      )\n      .call(labels => labels.transition(transition)\n        .text('DUMB MODE clients served: ' + cycles))\n  }\n\n  function header2(svg) {\n    let header = svg.append('g')\n      .style('font-variant-numeric', 'tabular-nums')\n      .style('font-size', '18')\n      .style('fill', '#333')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (cycles, transition, end) => header = header\n      .data([cycles], cycles => cycles)\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${margin2.left + (barSize * (n + 1 + 0.1)) / 2}, ${margin2.top - 40})`)\n          .attr('x', 0)\n          .attr('y', 0)\n          .text('SMART MODE clients served: ' + cycles),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .text('SMART MODE clients served: ' + cycles)\n      )\n      .call(labels => labels.transition(transition)\n        .text('SMART MODE clients served: ' + cycles))\n  }\n\n  function message(svg) {\n    let header = svg.append('g')\n      .style('font-size', '26')\n      .style('fill', '#ff0000')\n      .style('text-anchor', 'middle')\n      .selectAll('text');\n\n    return (message, height, transition) => header = header\n      .data([message], message => message)\n      .join(\n        enter => enter.append('text')\n          .attr('transform', d => `translate(${margin2.left + (barSize * (n + 1 + 0.1)) / 2}, ${height})`)\n          .attr('x', 0)\n          .attr('y', 0)\n          .text(message),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .text(message)\n      )\n      .call(labels => labels.transition(transition)\n        .text(message))\n  }\n\n  const updateHeader1 = header1(svg);\n  const updateBars1 = bars1(svg);\n  const updateAxis1 = yAxis1(svg);\n  const updateLabels1 = labels1(svg);\n\n  const updateHeader2 = header2(svg);\n  const updateBars2 = bars2(svg);\n  const updateAxis2 = yAxis2(svg);\n  const updateLabels2 = labels2(svg);\n\n  let chart1Finished = false;\n  let chart2Finished = false;\n  let cycles = {smart: 0, dumb: 0};\n  let animationLength = coinCollection.smart.length;\n  let prevNums = {smart: {}, dumb: {}};\n  for (let index = 0; index < animationLength; index++) {\n    if (chart1Finished && chart2Finished) {\n      return;\n    }\n    const transition = svg.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n\n    yScale1.domain([0, d3.max(coinSizes, coin => coinCollection.dumb[index][coin])]);\n    yScale2.domain([0, d3.max(coinSizes, coin => coinCollection.smart[index][coin])]);\n    cycles.smart += 100;\n    cycles.dumb += 100;\n\n    const noCoins = {dumb: true, smart: true};\n    for (let coin of coinSizes) {\n      if (prevNums.dumb[coin] !== coinCollection.dumb[index][coin]) {\n        noCoins.dumb = false;\n      }\n    }\n    if (noCoins.dumb && !chart1Finished) {\n      message(svg)('Out of coins!', margin1.top + 75);\n      chart1Finished = true;\n    }\n\n    for (let coin of coinSizes) {\n      if (prevNums.smart[coin] !== coinCollection.smart[index][coin]) {\n        noCoins.smart = false;\n      }\n    }\n    if (noCoins.smart && !chart2Finished) {\n      message(svg)('Out of coins!', margin2.top + 75);\n      chart2Finished = true;\n    }\n\n    if (!chart1Finished) {\n      updateHeader1(cycles.dumb, transition);\n      updateAxis1(coinCollection.dumb[index], transition);\n      updateBars1(coinCollection.dumb[index], transition);\n      updateLabels1(coinCollection.dumb[index], transition);\n    }\n    if (!chart2Finished) {\n      updateHeader2(cycles.smart, transition);\n      updateAxis2(coinCollection.smart[index], transition);\n      updateBars2(coinCollection.smart[index], transition);\n      updateLabels2(coinCollection.smart[index], transition);\n    }\n\n    prevNums.dumb = coinCollection.dumb[index];\n    prevNums.smart = coinCollection.smart[index];\n    await transition.end();\n  }\n}\n","export const MAIN_INFO = `\n  <p>Hi!</p>\n\n  <p>This page gives you a grasp of what a coin change algorithm does.</p>\n\n  <p><em>For more tech-savvy: coin change is calculated with account\n    to minimum amount of coins to give using dynamic programming.</em></p>\n\n  <p>There are two main modes of visualizing: <em>Normal</em> mode and <em>Simulation</em> mode.\n  You chan switch the modes in the Menu.\n  Also there are total of six coins by face value: 1, 2, 5, 10, 25, 50 cents.\n  <em>Normal</em> mode is pretty straightforward. You set the amount of change you want\n  and press <b>Get change</b> button. Algorithm calculates the optimal amount\n  of each coin to give you and after that you, well, get the coins right on the screen (^__^).</p>\n\n  <p>The <em>Simulation</em> mode is where things get interesting. The main idea is\n  to simulate the normal business day of the self-checkout counter. Then you pay\n  for goods, it gives you your change. Pretty simple.</p>\n\n  <p>But there are hundreds (if not thousands) of customers per one counter.\n  And for that you need a lot of coins! How much of each coin? This is what this mode does.\n  You can set the amount of customers for a hypothetical business day, amount of\n  each coin you load the counter with, change range, as well as which coins you DO NOT load.\n  After that just press <b>Run simulation</b> and see how counter consumes\n  each coin throughout a day.\n  The most interesting thing is that there are two types of counters:\n  the dumb one and the smart one. The former just calculates the minimum change\n  for every payment and gives the coins. The latter not only does that, it also\n  accounts for the amount of each coin left in the stock. The smart counter\n  tries to consume each coin type evenly and not run out of change in\n  the middle of a day.</p>\n\n  <p>The default setup for Simulation is intended to show that the effectiveness\n  of \"smart\" cachier can be quite drastic when you don't load it evenly with\n  every coin.</p>\n`;\n","import React, { useEffect, useState } from 'react';\n\nimport Coin from './components/coins';\nimport {\n  InputField,\n  SliderField,\n  DoubleSliderField,\n  Button,\n  MenuButton,\n  Toggle,\n  CheckBox\n} from './components/input';\nimport {\n  getRandomInt,\n  generateCoinCoords,\n  getCoinsArray,\n} from './helpers';\nimport {\n  getCoinNums,\n  getAmountsArray,\n  getChange,\n  updateCoinNums\n} from './algorithm';\nimport InfoModal from './components/modal';\nimport { drawCoinNumbers, clearSVG } from './barchart';\nimport { MAIN_INFO } from './text';\n\nconst COIN_SIZES = [1, 2, 5, 10, 25, 50]; // Can be any amount and any values\nconst COINS_NUMS = {\n  1: {\n    value: 10000,\n    active: true,\n  },\n  2: {\n    value: 10000,\n    active: true,\n  },\n  5: {\n    value: 10000,\n    active: true,\n  },\n  10: {\n    value: 10000,\n    active: true,\n  },\n  25: {\n    value: 10000,\n    active: true,\n  },\n  50: {\n    value: 10000,\n    active: true,\n  }\n};\nvar PRIORITIZATION = false;\n\nfunction App() {\n  // SVG dimentions\n  const width = window.innerWidth;\n  const height = window.innerHeight - 54;\n  // General coin values\n  let [menu, setMenu] = useState(false);\n  let [coinNumbers, setCoinNumbers] = useState(COINS_NUMS);\n  let [coinCoords, setCoinCoords] = useState([]);\n\n  let [simulation, setSimulation] = useState(false);\n  // NORMAL mode\n  let [changeRange, setChangeRange] = useState({min: 1, max: 100});\n  let [changeValue, setChangeValue] = useState(68);\n  // SIMULATION mode\n  let [loading, setLoading] = useState(false);\n  let [cycles, setCycles] = useState(10000);\n  let [coinNumbersSim, setCoinNumbsersSim] = useState(JSON.parse(JSON.stringify(COINS_NUMS)))\n\n  function toggleMenu(event) {\n    setMenu(!menu);\n  }\n\n  function handleSimulationChange(event) {\n    setSimulation(!simulation);\n  }\n\n  // Functions for NORMAL mode\n  function handleChangeValueChange(event) {\n    setChangeValue(event);\n  }\n\n  function calculateChange(event) {\n    event.preventDefault();\n    const coinNums = getCoinNums(COIN_SIZES, coinNumbers);\n    const amountsArray = getAmountsArray(\n      changeValue,\n      COIN_SIZES,\n      coinNums,\n      PRIORITIZATION\n    );\n    const change = getChange(amountsArray, coinNums, COIN_SIZES, PRIORITIZATION);\n    const coinsArray = getCoinsArray(change, COIN_SIZES);\n    const coords = generateCoinCoords(coinsArray, width, height);\n    setCoinCoords(coords);\n  }\n\n  useEffect(() => {}, [coinCoords])\n\n  // Functions for SIMULATION mode\n  function handleCyclesChange(event) {\n    setCycles(event);\n  }\n\n  function handleCoinNumbersChange(event) {\n    const coin = event.target.id;\n    const value = Number(event.target.value);\n    setCoinNumbsersSim(state => {\n      state[coin].value = value > 100000 ? 100000 : value;\n      return {...state};\n    });\n  }\n\n  function handleCoinActiveChange(event) {\n    const coin = event.target.id;\n    setCoinNumbsersSim(state => {\n      state[coin].active = !state[coin].active;\n      return {...state};\n    });\n  }\n\n  function handleChangeRangeChange(event) {\n    const newRange = {\n      min: event.min || 1,\n      max: event.max <= 100 ? event.max : 100\n    }\n    setChangeRange(newRange);\n  }\n\n  function getActiveCoins(coinNums) {\n    let array = [];\n    for (let coin of COIN_SIZES) {\n      if (coinNums[coin].active) {\n        array.push(coin);\n      }\n    }\n    return array;\n  }\n\n  function handleSimulation(event) {\n    event.preventDefault();\n    setLoading(true, setTimeout(runSimulation, 100));\n  }\n\n  function runSimulation() {\n    let counter = 0;\n    const coinNumsCollection = {smart: [], dumb: []};\n    const activeCoins = getActiveCoins(coinNumbersSim);\n    let coinNums = {\n      dumb: getCoinNums(activeCoins, coinNumbersSim),\n      smart: getCoinNums(activeCoins, coinNumbersSim),\n    };\n    for (let count = 0; count < cycles; count++) {\n      const changeSum = getRandomInt(changeRange.min, changeRange.max);\n      // Calculate for Dumb mode\n      const amountsArray1 = getAmountsArray(\n        changeSum,\n        activeCoins,\n        coinNums.dumb,\n        false\n      );\n      const change1 = getChange(\n        amountsArray1,\n        coinNums.dumb,\n        activeCoins,\n        false\n      );\n      // Calculate for Smart mode\n      const amountsArray2 = getAmountsArray(\n        changeSum,\n        activeCoins,\n        coinNums.smart,\n        true\n      );\n      const change2 = getChange(\n        amountsArray2,\n        coinNums.smart,\n        activeCoins,\n        true\n      );\n      updateCoinNums(change1, coinNums.dumb, activeCoins);\n      updateCoinNums(change2, coinNums.smart, activeCoins);\n      // Increment counter and optionally collection\n      counter += 1;\n      if (counter === 100) {\n        coinNumsCollection.dumb.push({...coinNums.dumb});\n        coinNumsCollection.smart.push({...coinNums.smart});\n        counter = 0;\n      }\n    }\n    setLoading(false);\n    drawCoinNumbers(activeCoins, coinNumsCollection);\n  }\n\n  useEffect(() => {\n    if (!simulation) {\n      setCoinNumbers(JSON.parse(JSON.stringify(COINS_NUMS)));\n      clearSVG();\n    }\n  }, [simulation])\n\n  return (\n    <React.Fragment>\n      <nav className='navbar navbar-minimal d-flex justify-content-end'>\n        <MenuButton\n          onClick={toggleMenu}\n          text=\"≡\"\n        />\n        <div className=\"mr-3\">\n          <InfoModal\n            title=\"Introduction\"\n            body={MAIN_INFO}\n          />\n        </div>\n        <div>\n          {simulation ? (\n            <Button\n              onClick={handleSimulation}\n              text=\"Run simulation\"\n            />\n          ) : (\n            <Button\n              onClick={calculateChange}\n              text=\"Get change\"\n            />\n          )}\n        </div>\n      </nav>\n      <div className={menu ? \"pt-4 pb-4 pl-4 pr-4 sidebar\" : \"pt-4 pb-4 sidebar sidebar-hidden\"}>\n        <button className=\"sidebar-close text-white\" onClick={toggleMenu}>&times;</button>\n        <form>\n          <h5 className='text-center mb-1'>Mode</h5>\n          <Toggle\n            checked={simulation}\n            onChange={handleSimulationChange}\n            uncheckedText=\"Normal\"\n            checkedText=\"Simulation\"\n          />\n          {simulation ? (\n            <React.Fragment>\n              <h5 className='text-center mb-2 mt-3'>Clients</h5>\n              <SliderField\n                minValue={1000}\n                maxValue={100000}\n                value={cycles}\n                onChange={handleCyclesChange}\n                step={1000}\n              />\n              <h5 className='text-center mb-2 mt-3'>Change range</h5>\n              <DoubleSliderField\n                minValue={1}\n                maxValue={100}\n                value={changeRange}\n                onChange={handleChangeRangeChange}\n                step={1}\n                format={\" ¢\"}\n              />\n              <h5 className='text-center mb-2 mt-3'>Coins</h5>\n              {COIN_SIZES.map(coin => (\n                <div\n                  key={coin}\n                  className=\"mb-2 d-flex text-white justify-content-center align-items-center\"\n                >\n                  <div className={coinNumbersSim[coin].active ? \"\" : \"disabled-field\"}>\n                    <label htmlFor={coin} className=\"checkbox-container\">\n                      {coin}¢ &times;\n                      <CheckBox\n                        id={coin}\n                        checked={coinNumbersSim[coin].active}\n                        onChange={handleCoinActiveChange}\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                  <div className={coinNumbersSim[coin].active ? \"\" : \"disabled-field\"}>\n                    <InputField\n                      id={coin}\n                      value={coinNumbersSim[coin].value}\n                      onChange={handleCoinNumbersChange}\n                      type=\"number\"\n                      placeholder=\"Amount\"\n                      step={100}\n                      disabled={!coinNumbersSim[coin].active}\n                    />\n                  </div>\n                </div>\n              ))}\n              <br/>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <h5 className='text-center mb-2 mt-3'>Change amount</h5>\n              <SliderField\n                minValue={changeRange.min}\n                maxValue={changeRange.max}\n                value={changeValue}\n                onChange={handleChangeValueChange}\n                format={\" ¢\"}\n              />\n            </React.Fragment>\n          )}\n        </form>\n      </div>\n      {loading ? (\n        <div className=\"lds-grid\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      ) : (\"\")}\n      <svg className=\"main-screen\">\n        {coinCoords.length > 0 && !simulation && coinCoords.map(coin => (\n          <Coin\n            faceValue={coin.value}\n            key={coin.x + \":\" + coin.y}\n            cx={coin.x}\n            cy={coin.y}\n          />\n        ))}\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap';\nimport 'react-input-range/lib/css/index.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}